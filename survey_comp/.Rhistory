type1cor <- count(final[which(final$Correct == 1 & final$Type == 1),])
type2inc <- count(final[which(final$Correct == 0 & final$Type == 2),])
type2cor <- count(final[which(final$Correct == 1 & final$Type == 2),])
type3inc <- count(final[which(final$Correct == 0 & final$Type == 3),])
type3cor <- count(final[which(final$Correct == 1 & final$Type == 3),])
type <- c("neither","neither", "reference \n line","reference \n line", "ref. line \n and bands","ref. line \n and bands")
result <- c("correct","incorrect","correct","incorrect","correct","incorrect")
correct <- c(type1cor[1,1],type1inc[1,1],type2cor[1,1],type2inc[1,1],type3cor[1,1],type3inc[1,1])
plot <- rep(i-2,6)
counts <- data.frame(type, result, correct, plot)
full2 <- rbind(full, counts)
}
plots <- vector()
full2 <- data.frame()
counts <- data.frame()
for (i in 3:10){
response <- cbind(compare[,1], compare[,i])
variation <- cbind(order_df[,1], order_df[,i-1])
final <- merge(response, variation, by = "V1")
final <- rename(final, userID = V1)
final <- rename(final, Correct = V2.x)
final <- rename(final, Type = V2.y)
type1inc <- count(final[which(final$Correct == 0 & final$Type == 1),])
type1cor <- count(final[which(final$Correct == 1 & final$Type == 1),])
type2inc <- count(final[which(final$Correct == 0 & final$Type == 2),])
type2cor <- count(final[which(final$Correct == 1 & final$Type == 2),])
type3inc <- count(final[which(final$Correct == 0 & final$Type == 3),])
type3cor <- count(final[which(final$Correct == 1 & final$Type == 3),])
type <- c("neither","neither", "reference \n line","reference \n line", "ref. line \n and bands","ref. line \n and bands")
result <- c("correct","incorrect","correct","incorrect","correct","incorrect")
correct <- c(type1cor[1,1],type1inc[1,1],type2cor[1,1],type2inc[1,1],type3cor[1,1],type3inc[1,1])
plot <- rep(i-2,6)
counts <- data.frame(type, result, correct, plot)
full2 <- rbind(full, counts)
}
View(full)
plots <- vector()
full2 <- data.frame()
counts <- data.frame()
for (i in 3:10){
response <- cbind(compare[,1], compare[,i])
variation <- cbind(order_df[,1], order_df[,i-1])
final <- merge(response, variation, by = "V1")
final <- rename(final, userID = V1)
final <- rename(final, Correct = V2.x)
final <- rename(final, Type = V2.y)
type1inc <- count(final[which(final$Correct == 0 & final$Type == 1),])
type1cor <- count(final[which(final$Correct == 1 & final$Type == 1),])
type2inc <- count(final[which(final$Correct == 0 & final$Type == 2),])
type2cor <- count(final[which(final$Correct == 1 & final$Type == 2),])
type3inc <- count(final[which(final$Correct == 0 & final$Type == 3),])
type3cor <- count(final[which(final$Correct == 1 & final$Type == 3),])
type <- c("neither","neither", "reference \n line","reference \n line", "ref. line \n and bands","ref. line \n and bands")
result <- c("correct","incorrect","correct","incorrect","correct","incorrect")
correct <- c(type1cor[1,1],type1inc[1,1],type2cor[1,1],type2inc[1,1],type3cor[1,1],type3inc[1,1])
plot <- rep(i-2,6)
counts <- data.frame(type, result, correct, plot)
full2 <- rbind(full2, counts)
}
View(compare)
# "correct_by_user" with userID
correct_by_user <- cbind(survey_df[1], correct_by_user)
View(correct_by_user)
plots <- vector()
full2 <- data.frame()
counts <- data.frame()
for (i in 3:10){
response <- cbind(correct_by_user[,1], correct_by_user[,i])
variation <- cbind(order_df[,1], order_df[,i-1])
final <- merge(response, variation, by = "V1")
final <- rename(final, userID = V1)
final <- rename(final, Correct = V2.x)
final <- rename(final, Type = V2.y)
type1inc <- count(final[which(final$Correct == 0 & final$Type == 1),])
type1cor <- count(final[which(final$Correct == 1 & final$Type == 1),])
type2inc <- count(final[which(final$Correct == 0 & final$Type == 2),])
type2cor <- count(final[which(final$Correct == 1 & final$Type == 2),])
type3inc <- count(final[which(final$Correct == 0 & final$Type == 3),])
type3cor <- count(final[which(final$Correct == 1 & final$Type == 3),])
type <- c("neither","neither", "reference \n line","reference \n line", "ref. line \n and bands","ref. line \n and bands")
result <- c("correct","incorrect","correct","incorrect","correct","incorrect")
correct <- c(type1cor[1,1],type1inc[1,1],type2cor[1,1],type2inc[1,1],type3cor[1,1],type3inc[1,1])
plot <- rep(i-2,6)
counts <- data.frame(type, result, correct, plot)
full2 <- rbind(full2, counts)
}
full2
plot_num <- vector()
correct_by_type <- data.frame()
counts <- data.frame()
for (i in 3:10){
response <- cbind(correct_by_user[,1], correct_by_user[,i])
variation <- cbind(order_df[,1], order_df[,i-1])
final <- merge(response, variation, by = "V1")
final <- rename(final, userID = V1)
final <- rename(final, Correct = V2.x)
final <- rename(final, Type = V2.y)
type1inc <- count(final[which(final$Correct == 0 & final$Type == 1),])
type1cor <- count(final[which(final$Correct == 1 & final$Type == 1),])
type2inc <- count(final[which(final$Correct == 0 & final$Type == 2),])
type2cor <- count(final[which(final$Correct == 1 & final$Type == 2),])
type3inc <- count(final[which(final$Correct == 0 & final$Type == 3),])
type3cor <- count(final[which(final$Correct == 1 & final$Type == 3),])
type <- c("neither","neither", "reference \n line","reference \n line", "ref. line \n and bands","ref. line \n and bands")
result <- c("correct","incorrect","correct","incorrect","correct","incorrect")
correct <- c(type1cor[1,1],type1inc[1,1],type2cor[1,1],type2inc[1,1],type3cor[1,1],type3inc[1,1])
plot_num <- rep(i-2,6)
counts <- data.frame(type, result, correct, plot_num)
correct_by_type <- rbind(correct_by_type, counts)
}
correct_by_type
# Plot 1 graph
plot1 <- ggplot(correct_by_type[1:6,], aes(x = factor(type, levels = c("neither","reference \n line","ref. line \n and bands")), y = correct, fill=result)) +
geom_bar(stat = "identity", position = 'dodge') + theme(axis.text.x = element_text(angle = 45)) +
geom_text(aes(label=correct), position=position_dodge(width=0.9), vjust=-0.25) +
labs(x = "Q-Q Plot Type", y = "Survey Results") + ggtitle("Dataset 1 Results by QQ-Plot Type")
plot1
# correct answers
answer_key <- c("normal","normal","non-normal","normal","non-normal","normal",
"non-normal","non-normal","normal")
correct_by_user <- data.frame()
for (i in 1:nrow(survey_df)){
vector <- answer_key == survey_df[i,2:10]
correct_by_user <- rbind(correct_by_user, vector)
}
# "correct_by_user" with userID
correct_by_user <- cbind(survey_df[1], correct_by_user)
# total correct by user
totalCorrect = rowSums(correct_by_user[ , !(names(correct_by_user) %in% "userID")])
totalCorrect
plot_num <- vector()
correct_by_type <- data.frame()
counts <- data.frame()
for (i in 3:10){
response <- cbind(correct_by_user[,1], correct_by_user[,i])
variation <- cbind(order_df[,1], order_df[,i-1])
final <- merge(response, variation, by = "V1")
final <- rename(final, userID = V1)
final <- rename(final, Correct = V2.x)
final <- rename(final, Type = V2.y)
type1inc <- count(final[which(final$Correct == 0 & final$Type == 1),])
type1cor <- count(final[which(final$Correct == 1 & final$Type == 1),])
type2inc <- count(final[which(final$Correct == 0 & final$Type == 2),])
type2cor <- count(final[which(final$Correct == 1 & final$Type == 2),])
type3inc <- count(final[which(final$Correct == 0 & final$Type == 3),])
type3cor <- count(final[which(final$Correct == 1 & final$Type == 3),])
type <- c("neither","neither", "reference \n line","reference \n line", "ref. line \n and bands","ref. line \n and bands")
result <- c("correct","incorrect","correct","incorrect","correct","incorrect")
correct <- c(type1cor[1,1],type1inc[1,1],type2cor[1,1],type2inc[1,1],type3cor[1,1],type3inc[1,1])
plot_num <- rep(i-2,6)
counts <- data.frame(type, result, correct, plot_num)
correct_by_type <- rbind(correct_by_type, counts)
}
# DATA FRAME "correct_by_type"
correct_by_type
# Plots
plot1 <- ggplot(correct_by_type[1:6,], aes(x = factor(type, levels = c("neither","reference \n line","ref. line \n and bands")), y = correct, fill=result)) +
geom_bar(stat = "identity", position = 'dodge') + theme(axis.text.x = element_text(angle = 45)) +
geom_text(aes(label=correct), position=position_dodge(width=0.9), vjust=-0.25) +
labs(x = "Q-Q Plot Type", y = "Survey Results") + ggtitle("Dataset 1 Results by QQ-Plot Type")
plot2 <- ggplot(correct_by_type[7:12,], aes(x = factor(type, levels = c("neither","reference \n line","ref. line \n and bands")), y = correct, fill=result)) +
geom_bar(stat = "identity", position = 'dodge') + theme(axis.text.x = element_text(angle = 45)) +
geom_text(aes(label=correct), position=position_dodge(width=0.9), vjust=-0.25) +
labs(x = "Q-Q Plot Type", y = "Survey Results") + ggtitle("Dataset 2 Results by QQ-Plot Type")
plot3 <- ggplot(correct_by_type[13:18,], aes(x = factor(type, levels = c("neither","reference \n line","ref. line \n and bands")), y = correct, fill=result)) +
geom_bar(stat = "identity", position = 'dodge') + theme(axis.text.x = element_text(angle = 45)) +
geom_text(aes(label=correct), position=position_dodge(width=0.9), vjust=-0.25) +
labs(x = "Q-Q Plot Type", y = "Survey Results") + ggtitle("Dataset 3 Results by QQ-Plot Type")
plot4 <- ggplot(correct_by_type[19:24,], aes(x = factor(type, levels = c("neither","reference \n line","ref. line \n and bands")), y = correct, fill=result)) +
geom_bar(stat = "identity", position = 'dodge') + theme(axis.text.x = element_text(angle = 45)) +
geom_text(aes(label=correct), position=position_dodge(width=0.9), vjust=-0.25) +
labs(x = "Q-Q Plot Type", y = "Survey Results") + ggtitle("Dataset 4 Results by QQ-Plot Type")
plot5 <- ggplot(correct_by_type[25:30,], aes(x = factor(type, levels = c("neither","reference \n line","ref. line \n and bands")), y = correct, fill=result)) +
geom_bar(stat = "identity", position = 'dodge') + theme(axis.text.x = element_text(angle = 45)) +
geom_text(aes(label=correct), position=position_dodge(width=0.9), vjust=-0.25) +
labs(x = "Q-Q Plot Type", y = "Survey Results") + ggtitle("Dataset 5 Results by QQ-Plot Type")
plot6 <- ggplot(correct_by_type[31:36,], aes(x = factor(type, levels = c("neither","reference \n line","ref. line \n and bands")), y = correct, fill=result)) +
geom_bar(stat = "identity", position = 'dodge') + theme(axis.text.x = element_text(angle = 45)) +
geom_text(aes(label=correct), position=position_dodge(width=0.9), vjust=-0.25) +
labs(x = "Q-Q Plot Type", y = "Survey Results") + ggtitle("Dataset 6 Results by QQ-Plot Type")
plot7 <- ggplot(correct_by_type[37:42,], aes(x = factor(type, levels = c("neither","reference \n line","ref. line \n and bands")), y = correct, fill=result)) +
geom_bar(stat = "identity", position = 'dodge') + theme(axis.text.x = element_text(angle = 45)) +
geom_text(aes(label=correct), position=position_dodge(width=0.9), vjust=-0.25) +
labs(x = "Q-Q Plot Type", y = "Survey Results") + ggtitle("Dataset 7 Results by QQ-Plot Type")
plot8 <- ggplot(correct_by_type[43:48,], aes(x = factor(type, levels = c("neither","reference \n line","ref. line \n and bands")), y = correct, fill=result)) +
geom_bar(stat = "identity", position = 'dodge') + theme(axis.text.x = element_text(angle = 45), ) +
geom_text(aes(label=correct), position=position_dodge(width=0.9), vjust=-0.25) +
labs(x = "Q-Q Plot Type", y = "Survey Results") + ggtitle("Dataset 8 Results by QQ-Plot Type")
# Grids
grid.arrange(plot1, grid.arrange(Dataset1noRef, Dataset1ref, Dataset1bands, ncol = 1), ncol = 2)
grid.arrange(plot2, grid.arrange(Dataset2noRef, Dataset2ref, Dataset2bands, ncol = 1), ncol = 2)
grid.arrange(plot3, grid.arrange(Dataset3noRef, Dataset3ref, Dataset3bands, ncol = 1), ncol = 2)
grid.arrange(plot4, grid.arrange(Dataset4noRef, Dataset4ref, Dataset4bands, ncol = 1), ncol = 2)
grid.arrange(plot5, grid.arrange(Dataset5noRef, Dataset5ref, Dataset5bands, ncol = 1), ncol = 2)
grid.arrange(plot6, grid.arrange(Dataset6noRef, Dataset6ref, Dataset6bands, ncol = 1), ncol = 2)
grid.arrange(plot7, grid.arrange(Dataset7noRef_2, Dataset7ref_2, Dataset7bands_2, ncol = 1), ncol = 2)
grid.arrange(plot8, grid.arrange(Dataset8noRef_2, Dataset8ref_2, Dataset8bands_2, ncol = 1), ncol = 2)
exp_level <- c("0 courses","0 courses","1-2 courses","1-2 courses","3+ courses")
correct <- vector()
incorrect <- vector()
for (i in 1:nrow(df)) {
responses <- df[i,6:13]
exp_level[i] <- df[i,3]
correct[i] <- sum(responses == answer_key)
incorrect[i] <- 8 - correct[i]
}
exp_frame <- data.frame(exp_level, correct, incorrect)
exp_frame <- melt(aggregate(. ~ exp_level, exp_frame, sum))
plotA <- ggplot(exp_frame, aes(x = factor(exp_level), y = value, fill = variable)) +
geom_bar(stat = "identity", position = 'dodge') + theme(axis.text.x = element_text(angle = 45)) +
labs(x = "Participant Experience Level", y = " Survey Results") +
ggtitle("Results by Experience Level") +
geom_text(aes(label=value), position=position_dodge(width=0.9), vjust=-0.25)
plotA
results_exp_plot <- ggplot(exp_frame, aes(x = factor(exp_level), y = value, fill = variable)) +
geom_bar(stat = "identity", position = 'dodge') + theme(axis.text.x = element_text(angle = 45)) +
labs(x = "Participant Experience Level", y = " Survey Results") +
ggtitle("Results by Experience Level") +
geom_text(aes(label=value), position=position_dodge(width=0.9), vjust=-0.25)
results_exp_plot
# full table
df <- na.omit(data.frame(full_join(x,y, by = "userID")))
View(df)
plot5
exp_frame <- melt(aggregate(. ~ exp_level, exp_frame, sum))
View(exp_frame)
# Plot
results_exp_plot <- ggplot(exp_frame, aes(x = factor(exp_level), y = value, fill = variable)) +
geom_bar(stat = "identity", position = 'dodge') + theme(axis.text.x = element_text(angle = 45)) +
labs(x = "Participant Experience Level", y = " Survey Results") +
ggtitle("Results by Experience Level") + labs(fill = "result") +
geom_text(aes(label=value), position=position_dodge(width=0.9), vjust=-0.25)
results_exp_plot
correct <- vector()
incorrect <- vector()
for (i in 1:nrow(df)) {
responses <- df[i,6:13]
exp_level[i] <- df[i,3]
correct[i] <- sum(responses == answer_key)
incorrect[i] <- 8 - correct[i]
}
exp_frame <- data.frame(exp_level, correct, incorrect)
exp_frame <- melt(aggregate(. ~ exp_level, exp_frame, sum))
View(exp_frame)
# Plot
results_exp_plot <- ggplot(exp_frame, aes(x = factor(exp_level), y = value, fill = variable)) +
geom_bar(stat = "identity", position = 'dodge') + theme(axis.text.x = element_text(angle = 45)) +
labs(x = "Participant Experience Level", y = " Survey Results") +
ggtitle("Results by Experience Level") + labs(fill = "result") +
geom_text(aes(label=value), position=position_dodge(width=0.9), vjust=-0.25)
results_exp_plot
correct_by_user <- data.frame()
for (i in 1:nrow(survey_df)){
vector <- answer_key == survey_df[i,2:10]
correct_by_user <- rbind(correct_by_user, vector)
}
View(correct_by_user)
totalCorrect
# total correct by data set
total_correct_dataset = colSums(correct_by_user[ , !(names(correct_by_user) %in% "userID")])
total_correct_dataset
View(correct_by_type)
x <- subset(correct_by_type, select = -type)
View(x)
x %>% group_by(plot_num, result)
x <- group_by(x, c(plot_num, result))
x <- subset(correct_by_type, select = -type)
x %>% group_by(x, c(plot_num, result))
x %>% group_by(plot_num)
x %>%
group_by(plot_num, result) %>%
summarise(a_sum=sum(correct))
x
x %>%
group_by(plot_num, result) %>%
summarise(a_sum=sum(correct))
correct_by_plot <- x %>% group_by(plot_num, result) %>% summarise(a_sum=sum(correct))
View(correct_by_plot)
correct_by_plot <- x %>% group_by(plot_num, result) %>% summarise(count=sum(correct))
View(correct_by_plot)
View(correct_by_user)
View(exp_frame)
results_overall_plot <- ggplot(correct_by_plot, aes(x = factor(plot_num), y = count, fill = result)) +
geom_bar(stat = "identity", position = 'dodge') + theme(axis.text.x = element_text(angle = 45)) +
labs(x = "Participant Experience Level", y = "Survey Results") +
ggtitle("Results by Experience Level") + labs(fill = "result") +
geom_text(aes(label=value), position=position_dodge(width=0.9), vjust=-0.25)
results_overall_plot
results_overall_plot <- ggplot(correct_by_plot, aes(x = factor(plot_num), y = count, fill = result)) +
geom_bar(stat = "identity", position = 'dodge') + theme(axis.text.x = element_text(angle = 45)) +
labs(x = "Participant Experience Level", y = "Survey Results") +
ggtitle("Results by Experience Level") + labs(fill = "result") +
geom_text(aes(label=count), position=position_dodge(width=0.9), vjust=-0.25)
results_overall_plot
results_overall_plot <- ggplot(correct_by_plot, aes(x = factor(plot_num), y = count, fill = result)) +
geom_bar(stat = "identity", position = 'dodge') + theme(axis.text.x = element_text(angle = 45)) +
labs(x = "Participant Experience Level", y = "Count") +
ggtitle("Results by Plot") + labs(fill = "result") +
geom_text(aes(label=count), position=position_dodge(width=0.9), vjust=-0.25)
results_overall_plot
results_overall_plot <- ggplot(correct_by_plot, aes(x = factor(plot_num), y = count, fill = result)) +
geom_bar(stat = "identity", position = 'stack') + theme(axis.text.x = element_text(angle = 45)) +
labs(x = "Participant Experience Level", y = "Count") +
ggtitle("Results by Plot") + labs(fill = "result") +
geom_text(aes(label=count), position=position_dodge(width=0.9), vjust=-0.25)
results_overall_plot
results_overall_plot <- ggplot(correct_by_plot, aes(x = factor(plot_num), y = count, fill = result)) +
geom_bar(stat = "identity", position = 'fill') + theme(axis.text.x = element_text(angle = 45)) +
labs(x = "Participant Experience Level", y = "Count") +
ggtitle("Results by Plot") + labs(fill = "result") +
geom_text(aes(label=count), position=position_dodge(width=0.9), vjust=-0.25)
results_overall_plot
results_overall_plot <- ggplot(correct_by_plot, aes(x = factor(plot_num), y = count, fill = result)) +
geom_bar(stat = "identity", position = 'stack') + theme(axis.text.x = element_text(angle = 45)) +
labs(x = "Participant Experience Level", y = "Count") +
ggtitle("Results by Plot") + labs(fill = "result") +
geom_text(aes(label=count), position=position_dodge(width=0.9), vjust=-0.25)
results_overall_plot
results_overall_plot <- ggplot(correct_by_plot, aes(x = factor(plot_num), y = count, fill = result)) +
geom_bar(stat = "identity", position = 'stack') + theme(axis.text.x = element_text(angle = 45)) +
labs(x = "Participant Experience Level", y = "Count") +
ggtitle("Results by Plot") + labs(fill = "result") +
geom_text(aes(label=count))
results_overall_plot
results_overall_plot <- ggplot(correct_by_plot, aes(x = factor(plot_num), y = count, fill = result)) +
geom_bar(stat = "identity", position = 'stack') + theme(axis.text.x = element_text(angle = 45)) +
labs(x = "Participant Experience Level", y = "Count") +
ggtitle("Results by Plot") + labs(fill = "result") +
geom_text(aes(label=count), vjust=-0.25)
results_overall_plot
results_overall_plot <- ggplot(correct_by_plot, aes(x = factor(plot_num), y = count, fill = result)) +
geom_bar(stat = "identity", position = 'stack') + theme(axis.text.x = element_text(angle = 45)) +
labs(x = "Participant Experience Level", y = "Count") +
ggtitle("Results by Plot") + labs(fill = "result") +
geom_text(size = 3, position = position_stack(vjust = 0.5))
results_overall_plot
results_overall_plot <- ggplot(correct_by_plot, aes(x = factor(plot_num), y = count, fill = result)) +
geom_bar(stat = "identity", position = 'stack') + theme(axis.text.x = element_text(angle = 45)) +
labs(x = "Participant Experience Level", y = "Count") +
ggtitle("Results by Plot") + labs(fill = "result") +
geom_text(aes(label=count), position = position_stack(vjust = 0.5))
results_overall_plot
results_overall_plot <- ggplot(correct_by_plot, aes(x = factor(plot_num), y = count, fill = result)) +
geom_bar(stat = "identity", position = 'stack') + theme(axis.text.x = element_text(angle = 45)) +
labs(x = "Dataset", y = "Count") +
ggtitle("Results by Plot") + labs(fill = "result") +
geom_text(aes(label=count), position = position_stack(vjust = 0.5))
results_overall_plot
results_overall_plot <- ggplot(correct_by_plot, aes(x = factor(plot_num), y = count, fill = result)) +
geom_bar(stat = "identity", position = 'stack') + theme(axis.text.x = element_text(angle = 45)) +
labs(x = "Dataset Number", y = "Count") +
ggtitle("Results by Plot") + labs(fill = "result") +
geom_text(aes(label=count), position = position_stack(vjust = 0.5))
results_overall_plot
results_overall_plot <- ggplot(correct_by_plot, aes(x = factor(plot_num), y = count, fill = factor(result, levels = c("correct","incorrect")))) +
geom_bar(stat = "identity", position = 'stack') + theme(axis.text.x = element_text(angle = 45)) +
labs(x = "Dataset Number", y = "Count") +
ggtitle("Results by Plot") + labs(fill = "result") +
geom_text(aes(label=count), position = position_stack(vjust = 0.5))
results_overall_plot
results_overall_plot <- ggplot(correct_by_plot, aes(x = factor(plot_num), y = count, fill = factor(result, levels = c("incorrect","correct")))) +
geom_bar(stat = "identity", position = 'stack') + theme(axis.text.x = element_text(angle = 45)) +
labs(x = "Dataset Number", y = "Count") +
ggtitle("Results by Plot") + labs(fill = "result") +
geom_text(aes(label=count), position = position_stack(vjust = 0.5))
results_overall_plot
x2 <- subset(correct_by_type, select = -plot_num)
View(x2)
correct_by_type_total <- x2 %>% group_by(type, result) %>% summarise(count=sum(correct))
View(correct_by_type_total)
install.packages("reshape2")
install.packages("reshape2")
library(reshape2)
dcast(correct_by_type_total, result ~ count)
chi_frame_type <- data.frame(correct = c(correct_by_type_total[1,3], correct_by_type_total[3,3], correct_by_type_total[5,3]))
View(chi_frame_type)
chi_frame_type <- data.frame(correct = c(correct_by_type_total[1,3], correct_by_type_total[3,3], correct_by_type_total[5,3]),
incorrect = c(correct_by_type_total[2,3], correct_by_type_total[4,3], correct_by_type_total[6,3]))
chi_frame_type <- data.frame(c(correct_by_type_total[1,3], correct_by_type_total[3,3], correct_by_type_total[5,3]),
c(correct_by_type_total[2,3], correct_by_type_total[4,3], correct_by_type_total[6,3]))
View(chi_frame_type)
a <- c(correct_by_type_total[1,3], correct_by_type_total[3,3], correct_by_type_total[5,3])
b <- c(correct_by_type_total[2,3], correct_by_type_total[4,3], correct_by_type_total[6,3])
View(a)
data.frame(a,b)
data.frame(correct = a,incorrect = b)
df <- data.frame(name = c("Jon", "Bill", "Maria"),
age = c(23, 41, 32)
)
print (df)
a <- c(correct_by_type_total[1,3], correct_by_type_total[3,3], correct_by_type_total[5,3])
a
b <- c(correct_by_type_total[2,3], correct_by_type_total[4,3], correct_by_type_total[6,3])
c <- data.frame(correct = a,incorrect = b)
c
x2 <- subset(correct_by_type, select = -c(plot_num, type))
x2 <- subset(correct_by_type, select = -plot_num)
View(correct_by_type_total)
df.wide <- pivot_wider(correct_by_type_total, names_from = result, values_from = count)
install.packages("tinyr")
install.packages("tidyr")
install.packages("tidyr")
library(tidyr)
df.wide <- pivot_wider(correct_by_type_total, names_from = result, values_from = count)
remove.packages('tidyr')
install.packages('tidyr', repos='http://cran.rstudio.com/')
library(tidyr)
install.packages('tidyr', `update.packages(checkBuilt = TRUE)
dsa
install.packages('tidyr', `update.packages(checkBuilt = TRUE))
install.packages("assertthat")
install.packages("magrittr")
install.packages("lazyeval")
install.packages("BH")
install.packages("R6")
install.packages("http://cran.r-project.org/src/contrib/Archive/dplyr/dplyr_0.4.1.tar.gz", repos=NULL)
install.packages("tidyr")
install.packages("assertthat")
install.packages("magrittr")
install.packages("tidyr")
install.packages("assertthat")
install.packages("magrittr")
install.packages("magrittr")
library(tidyr)
library(tidyr)
df.wide <- pivot_wider(correct_by_type_total, names_from = result, values_from = count)
View(df.wide)
total_wider <- pivot_wider(correct_by_type_total, names_from = result, values_from = count)
View(total_wider)
total_wider <- subset(total_wider, select = -type)
test <- chisq.test(as.table(total_wider))
test <- chisq.test(total_wider)
test
test$observed
exp_frame <- data.frame(exp_level, correct, incorrect)
expected <- round(test$expected,2)
expected
residuals <- round(test$residuals,3)
residuals
round(contrib, 3)
# Contibution in percentage (%)
contrib <- 100*chisq$residuals^2/chisq$statistic
# Contibution in percentage (%)
contrib <- 100*test$residuals^2/test$statistic
round(contrib, 3)
corrplot(contrib, is.cor = FALSE)
install.packages("corrplot")
library(corrplot)
corrplot(contrib, is.cor = FALSE)
round(contrib, 3)
View(x2)
View(exp_frame)
View(exp_frame2)
exp_chi <- exp_frame %>% group_by(exp_level) %>% summarise(correct=sum(correct), incorrect = sum(incorrect))
exp_frame <- data.frame(exp_level, correct, incorrect)
View(exp_frame)
exp_frame <- melt(aggregate(. ~ exp_level, exp_frame, sum))
# Libraries
library(googlesheets4)
library(dplyr)
library(reshape2)
library(gridExtra)
library(reshape2)
library(tidyr)
library(corrplot)
exp_frame <- data.frame(exp_level, correct, incorrect)
exp_frame <- melt(aggregate(. ~ exp_level, exp_frame, sum))
View(exp_frame)
View(exp_frame2)
exp_wider <- pivot_wider(exp_frame, names_from = variable, values_from = value)
View(exp_wider)
total_wider <- subset(exp_wider, select = -exp_level)
exp_wider <- pivot_wider(exp_frame, names_from = variable, values_from = value)
exp_total_wider <- subset(exp_wider, select = -exp_level)
exp_test <- chisq.test(exp_total_wider)
exp_observed <- exp_test$observed
exp_expected <- round(exp_test$expected,2)
exo_residuals <- round(exp_test$residuals,3)
exp_residuals <- round(exp_test$residuals,3)
exp_test
exp_residuals
contrib2 <- 100*exp_test$residuals^2/exp_test$statistic
round(contrib2, 3)
test
expected
observed
observed <- test$observed
observed
install.packages("schrute")
library(schrute)
officeData <- schrute::theoffice
View(officeData)
names(officeData)
shiny::runApp('~/Desktop/school/research/R Code/qqplot_shiny_contest')
runApp('~/Desktop/school/research/R Code/qqplot_shiny_contest')
runApp('~/Desktop/school/research/R Code/qqplot_shiny_contest')
runApp('~/Desktop/school/research/R Code/qqplot_shiny_contest')
runApp('~/Desktop/school/research/R Code/qqplot_shiny_contest')
runApp('~/Desktop/school/research/R Code/qqplot_shiny_contest')
runApp('~/Desktop/school/research/R Code/qqplot_shiny_contest')
runApp('~/Desktop/school/research/R Code/qqplot_shiny_contest')
runApp('~/Desktop/school/research/R Code/qqplot_shiny_contest')
runApp()
runApp('~/Desktop/school/research/R Code/qqplot_shiny_contest')
runApp('~/Desktop/school/research/R Code/qqplot_shiny_contest')
runApp('~/Desktop/school/research/R Code/qqplot_shiny_contest')
span()
?span
runApp('~/Desktop/school/research/R Code/qqplot_shiny_contest')
runApp('~/Desktop/school/research/R Code/qqplot_shiny_contest')
runApp('~/Desktop/school/research/R Code/qqplot_shiny_contest')
runApp('~/Desktop/research/R Code/Survey (COMP)')
